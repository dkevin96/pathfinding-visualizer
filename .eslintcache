[{"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\index.js":"1","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\reportWebVitals.js":"2","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\App.js":"3","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\Header.js":"4","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\footer\\Footer.js":"5","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\Table.js":"6","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\index.js":"7","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\TableIndex.js":"8","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\TableUI.js":"9","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\PC.js":"10","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\MouseEvent.js":"11","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\ButtonEvent.js":"12","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\Colored.js":"13","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\DropdownAlgorithm.js":"14","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\NavButton.js":"15","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\DropdownSpeed.js":"16","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\Info.js":"17","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\NavLink.js":"18","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\SetTable.js":"19","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\UpdateTable.js":"20","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\WhichComp.js":"21","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\Animation.js":"22","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\Dijkstra.js":"23","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\DFS.js":"24","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\PriorityQueue.js":"25","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\BFS.js":"26","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\Distance.js":"27","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\Queue.js":"28"},{"size":461,"mtime":1639931112221,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1624022764769,"results":"31","hashOfConfig":"30"},{"size":2935,"mtime":1639931112217,"results":"32","hashOfConfig":"30"},{"size":147,"mtime":1624104589765,"results":"33","hashOfConfig":"30"},{"size":885,"mtime":1624620722405,"results":"34","hashOfConfig":"30"},{"size":645,"mtime":1639875636421,"results":"35","hashOfConfig":"30"},{"size":2164,"mtime":1639931112218,"results":"36","hashOfConfig":"30"},{"size":3037,"mtime":1639917071105,"results":"37","hashOfConfig":"30"},{"size":1923,"mtime":1639931112220,"results":"38","hashOfConfig":"30"},{"size":1382,"mtime":1624619444361,"results":"39","hashOfConfig":"30"},{"size":4507,"mtime":1639931112219,"results":"40","hashOfConfig":"30"},{"size":3705,"mtime":1624474695915,"results":"41","hashOfConfig":"30"},{"size":746,"mtime":1624618353861,"results":"42","hashOfConfig":"30"},{"size":1833,"mtime":1640012247588,"results":"43","hashOfConfig":"30"},{"size":3242,"mtime":1640012570839,"results":"44","hashOfConfig":"30"},{"size":1488,"mtime":1624104819824,"results":"45","hashOfConfig":"30"},{"size":542,"mtime":1624619637798,"results":"46","hashOfConfig":"30"},{"size":737,"mtime":1624437895745,"results":"47","hashOfConfig":"30"},{"size":1190,"mtime":1639875636423,"results":"48","hashOfConfig":"30"},{"size":348,"mtime":1624464194442,"results":"49","hashOfConfig":"30"},{"size":1852,"mtime":1639875636425,"results":"50","hashOfConfig":"30"},{"size":5514,"mtime":1624618752823,"results":"51","hashOfConfig":"30"},{"size":9431,"mtime":1624619171474,"results":"52","hashOfConfig":"30"},{"size":2255,"mtime":1640013148928,"results":"53","hashOfConfig":"30"},{"size":2303,"mtime":1624547900014,"results":"54","hashOfConfig":"30"},{"size":2573,"mtime":1640040231511,"results":"55","hashOfConfig":"30"},{"size":2607,"mtime":1640040195966,"results":"56","hashOfConfig":"30"},{"size":468,"mtime":1640009120447,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"rcarif",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\index.js",[],["124","125"],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\reportWebVitals.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\App.js",["126"],"import { useReducer } from \"react\";\r\n\r\nimport Header from \"./components/header/Header\";\r\nimport Table from \"./components/table/Table\";\r\nimport Footer from \"./components/footer/Footer\"\r\n\r\nimport {\r\n  algorithmReducer,\r\n  initialAlgorithm,\r\n  algorithmContext,\r\n} from \"./components/core\";\r\nimport {\r\n  sysStatusReducer,\r\n  initialsysStatus,\r\n  sysStatusContext,\r\n} from \"./components/core\";\r\nimport { speedContext, speedInitial, speedReducer } from \"./components/core\";\r\nimport {\r\n  animationStatusContext,\r\n  animationStatusInitial,\r\n  animationStatusReducer,\r\n} from \"./components/core\";\r\nimport {\r\n  updateReducer,\r\n  updateInitial,\r\n  updateContext,\r\n} from \"./components/table/tablehelper/TableIndex\";\r\nimport {\r\n  moveReducer,\r\n  moveInitial,\r\n  moveContext,\r\n} from \"./components/table/tablehelper/TableIndex\";\r\nimport {\r\n  touchReducer,\r\n  touchInitial,\r\n  touchContext,\r\n} from \"./components/table/tablehelper/TableIndex\";\r\n\r\nimport { position } from \"./components/core/index\";\r\n\r\nfunction App() {\r\n  const [curAlgorithm, setCurAlgorithm] = useReducer(\r\n    algorithmReducer,\r\n    initialAlgorithm\r\n  );\r\n  const [curSysStatus, setCurSysStatus] = useReducer(\r\n    sysStatusReducer,\r\n    initialsysStatus\r\n  );\r\n  const [curSpeed, setCurSpeed] = useReducer(speedReducer, speedInitial);\r\n  const [animation, setAnimation] = useReducer(\r\n    animationStatusReducer,\r\n    animationStatusInitial\r\n  );\r\n\r\n  const [update, setUpdate] = useReducer(updateReducer, updateInitial);\r\n  const [touch, setTouch] = useReducer(touchReducer, touchInitial);\r\n  const [move, setMove] = useReducer(moveReducer, moveInitial);\r\n\r\n  const click = () => {\r\n    const wall = Object.keys(position.wall);\r\n\r\n    console.log(wall.length);\r\n    // buttonEvent.ClearPath();\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <animationStatusContext.Provider\r\n        value={{ get: animation, set: setAnimation }}\r\n      >\r\n        <updateContext.Provider value={{ get: update, set: setUpdate }}>\r\n          <moveContext.Provider value={{ get: move, set: setMove }}>\r\n            <touchContext.Provider value={{ get: touch, set: setTouch }}>\r\n              <speedContext.Provider\r\n                value={{ get: curSpeed, set: setCurSpeed }}\r\n              >\r\n                <sysStatusContext.Provider\r\n                  value={{ get: curSysStatus, set: setCurSysStatus }}\r\n                >\r\n                  <algorithmContext.Provider\r\n                    value={{ get: curAlgorithm, set: setCurAlgorithm }}\r\n                  >\r\n                    <Header />\r\n                    <Table />\r\n                    <Footer />\r\n                  </algorithmContext.Provider>\r\n                </sysStatusContext.Provider>\r\n              </speedContext.Provider>\r\n            </touchContext.Provider>\r\n          </moveContext.Provider>\r\n        </updateContext.Provider>\r\n      </animationStatusContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\Header.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\footer\\Footer.js",["127"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCopyright } from '@fortawesome/free-solid-svg-icons'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nconst Footer = () => {\r\n    return (\r\n      <div className=\"footer\">\r\n          <div className=\"m-2 text-center\">\r\n            <a href=\"\">\r\n              <span className=\"p-2\">\r\n                  <FontAwesomeIcon icon={faGithub} size=\"lg\"/>\r\n              </span>\r\n              <p className=\"inline text-xl font-mono\">Git Repo</p>\r\n            </a>\r\n          </div>\r\n          <div className=\"m-2 text-center\">\r\n            <span className=\"p-2\">\r\n              <FontAwesomeIcon icon={faCopyright} size=\"lg\"/>\r\n            </span>\r\n            <p className=\"inline text-xl font-mono\">Created by Kevin, 2021</p>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default Footer\r\n\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\Table.js",["128","129"],"import TableUI from \"./tablehelper/TableUI\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { sysStatusContext } from \"../core/index\";\r\nimport { updateContext } from \"./tablehelper/TableIndex\";\r\n\r\nfunction Table() {\r\n  const sysStatus = useContext(sysStatusContext);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      sysStatus.set(\"IDLE\");\r\n    }, 1000);\r\n  }, []);\r\n\r\n  if (sysStatus.get === \"LOADING\") {\r\n    return <Spinner animation=\"border\" variant=\"warning\" />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <TableUI />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\index.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\TableIndex.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\TableUI.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\PC.js",["130","131","132"],"import React, { useContext } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport DropdownAlgorithm from \"./elements/DropdownAlgorithm\";\r\nimport NavButton from \"./elements/NavButton\";\r\nimport DropdownSpeed from \"./elements/DropdownSpeed\";\r\nimport Info from \"./elements/Info\";\r\n\r\nimport ButtonEvent from \"../../table/tablehelper/ButtonEvent\";\r\nimport Colored from \"./Colored\";\r\nimport { sysStatusContext } from \"../../core/index\";\r\nimport NavLink from \"./elements/NavLink\";\r\n\r\nfunction PC() {\r\n  const buttonEvent = ButtonEvent();\r\n  const sysStatus = useContext(sysStatusContext);\r\n  const [className, toggleHandler] = Colored();\r\n\r\n  return (\r\n    <>\r\n      <Navbar collapseOnSelect expand=\"md\" className=\"navbar\">\r\n        <Navbar.Toggle aria-controls=\"Collapse\" />\r\n        <Navbar.Collapse id=\"Collapse\" className=\"nvbar-collapse\">\r\n          <Nav className=\"nav-bar\">\r\n            <DropdownAlgorithm />\r\n            <NavButton />\r\n            <NavLink names={\"Clear Board\"} handlers={buttonEvent.ClearBoard} />\r\n            <NavLink names={\"Clear Walls\"} handlers={buttonEvent.ClearWalls} />\r\n            <NavLink names={\"Clear Path\"} handlers={buttonEvent.ClearPath} />\r\n            <DropdownSpeed />\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Info />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PC;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\MouseEvent.js",["133","134","135"],"import { useContext, useEffect } from \"react\";\r\nimport {\r\n  sysStatusContext,\r\n  algorithmContext,\r\n  speedContext,\r\n  animationStatusContext,\r\n} from \"../../core/index\";\r\n\r\nimport {\r\n  tableVar,\r\n  touchContext,\r\n  moveContext,\r\n  updateContext,\r\n  componentKind,\r\n  keyboardSupport,\r\n  synchronize,\r\n} from \"./TableIndex\";\r\nimport { setTable } from \"./SetTable\";\r\nimport { UpdateTable } from \"./UpdateTable\";\r\nimport { WhichComponent } from \"./WhichComp\";\r\nimport ButtonEvent from \"./ButtonEvent\";\r\n\r\nfunction MouseEvent() {\r\n  const [touch, move, update, animation] = [\r\n    useContext(touchContext),\r\n    useContext(moveContext),\r\n    useContext(updateContext),\r\n    useContext(animationStatusContext),\r\n  ];\r\n  const [algorithm, speed, sysStatus] = [\r\n    useContext(algorithmContext),\r\n    useContext(speedContext),\r\n    useContext(sysStatusContext),\r\n  ];\r\n\r\n  const buttonEvent = ButtonEvent();\r\n\r\n  useEffect(() => {\r\n    // Because the first time addEventListener algorithm.get sysStatus.get will be blank\r\n    synchronize.algorithm = algorithm;\r\n    synchronize.sysStatus = sysStatus;\r\n  }, [algorithm.get, sysStatus.get]);\r\n\r\n  const CheckStopStatus = () => {\r\n    if (sysStatus.get === \"STOP\") {\r\n      buttonEvent.ClearPath();\r\n    }\r\n    sysStatus.set(\"IDLE\");\r\n  };\r\n\r\n  const MouseDownHandler = (e) => {\r\n    // console.log(\"MouseDownHandler \" + e.target.id)\r\n    if (\r\n      (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") ||\r\n      componentKind.add === false\r\n    ) {\r\n      // sysStatus = \"IDLE\" & \"STOP\" lock Mouse\r\n      return;\r\n    }\r\n\r\n    e.preventDefault();\r\n\r\n    tableVar.id = parseInt(e.target.id);\r\n    const whichComponent = WhichComponent(tableVar.id, touch);\r\n\r\n    if (whichComponent.type) {\r\n      // If the wall and weight is added, it must be added immediately and reset the current path\r\n      CheckStopStatus();\r\n      setTable(tableVar.id, whichComponent.rKind, true);\r\n      move.set(componentKind.add);\r\n    } else {\r\n      // Move start and end node\r\n      move.set(whichComponent.kind);\r\n    }\r\n  };\r\n\r\n  const MouseUpHandler = (e) => {\r\n    // console.log(\"MouseUpHandler \" + e.target.id)\r\n\r\n    if (\r\n      (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") ||\r\n      componentKind.add === false\r\n    ) {\r\n      // sysStatus = \"IDLE\" & \"STOP\" lock Mouse\r\n      return;\r\n    }\r\n\r\n    move.set(\"\");\r\n\r\n    if (update.get && move.get !== \"\") {\r\n      \r\n      UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed);\r\n    }\r\n  };\r\n\r\n  const OnMouseEnterHanlder = (e) => {\r\n    // console.log(\"OnMouseEnterHanlder \" + e.target.id)\r\n\r\n    if (\r\n      (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") ||\r\n      componentKind.add === false\r\n    ) {\r\n      // sysStatus = \"IDLE\" & \"STOP\" lock Mouse\r\n      return;\r\n    }\r\n\r\n    tableVar.newId = parseInt(e.target.id);\r\n    const whichOldComponent = WhichComponent(tableVar.id, touch);\r\n    const whichNewComponent = WhichComponent(tableVar.newId, touch);\r\n\r\n    // console.log(whichOldComponent)\r\n    // console.log(whichNewComponent)\r\n    if (move.get === componentKind.add && whichNewComponent.type) {\r\n      // If you add a wall , you don’t need to clear the object with the old id\r\n      setTable(tableVar.newId, whichNewComponent.rKind, true);\r\n      tableVar.id = parseInt(tableVar.newId);\r\n      CheckStopStatus();\r\n    } else if (\r\n      // Move start and end node\r\n      move.get !== componentKind.add &&\r\n      move.get !== \"\" &&\r\n      whichNewComponent.type\r\n    ) {\r\n      // Delete old start/end position (set id to background)\r\n      // touch at first will be touchinital, start, end is componenkind.background\r\n      // If it overlaps wall then touch will be set to wall\r\n      // after it exit wall, whicholdcomponent.touch will be wall in this case\r\n      setTable(tableVar.id, whichOldComponent.touch, true);\r\n      touch.set({\r\n        // in touch reducer, action.componentkind will take start, end as input\r\n        componentKind: whichOldComponent.kind,\r\n        under: whichNewComponent.kind,\r\n      });\r\n      // add start/end to new position\r\n      setTable(tableVar.newId, whichOldComponent.kind, true);\r\n      tableVar.id = parseInt(tableVar.newId);\r\n      CheckStopStatus();\r\n\r\n      if (update.get && move.get !== \"\") {\r\n        //  UpdateTable\r\n        UpdateTable(buttonEvent.Start, buttonEvent.ClearPath, algorithm, speed);\r\n      }\r\n    }\r\n  };\r\n\r\n  return { MouseDownHandler, MouseUpHandler, OnMouseEnterHanlder };\r\n}\r\n\r\nexport default MouseEvent;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\ButtonEvent.js",["136","137","138"],"import { useContext } from \"react\";\r\nimport {\r\n  tableVar,\r\n  touchContext,\r\n  updateContext,\r\n  componentKind,\r\n  synchronize,\r\n  originPos,\r\n} from \"./TableIndex\";\r\nimport {\r\n  SearchAnimation,\r\n  SearchFinalAnimation,\r\n  MazeAnimation,\r\n  FinalAnimation,\r\n  FinalMazeAnimation,\r\n  stopStatus,\r\n  resetAnimation,\r\n  setAnimation,\r\n  setMazeAnimation,\r\n} from \"./Animation\";\r\nimport {\r\n  sysStatusContext,\r\n  algorithmContext,\r\n  speedContext,\r\n  animationStatusContext,\r\n  position,\r\n} from \"../../core\";\r\nimport { setTable } from \"./SetTable\";\r\nimport { WhichComponentSame } from \"./WhichComp\";\r\n\r\nfunction ButtonEvent() {\r\n  const [touch, update] = [useContext(touchContext), useContext(updateContext)];\r\n  const [algorithm, sysSpeed, sysStatus, animation] = [\r\n    useContext(algorithmContext),\r\n    useContext(speedContext),\r\n    useContext(sysStatusContext),\r\n    useContext(animationStatusContext),\r\n  ];\r\n\r\n  const Start = (\r\n    search = stopStatus.searchResult,\r\n    path = stopStatus.pathResult,\r\n    pathDirection = stopStatus.pathDirectionResult,\r\n    speed = sysSpeed.get[1]\r\n  ) => {\r\n    if (stopStatus.animationStatus) {\r\n      // If the animation is executing, pause and return directly\r\n      stopStatus.animationStatus = false;\r\n      return;\r\n    }\r\n\r\n    if (\r\n      sysStatus.get === \"IDLE\" ||\r\n      (sysStatus.get === \"STOP\" && algorithm.get !== stopStatus.algorithm)\r\n    ) {\r\n      console.log('setting animation...')\r\n      setAnimation(search, path, pathDirection, algorithm.get);\r\n      // resetAnimation()  // Before executing start, it will call ClearPath()\r\n    }\r\n\r\n    if (update.get && synchronize.update) {\r\n      // realtime update of algorithm and shortest path, path is already searched \r\n      FinalAnimation(search, path, pathDirection);\r\n    } else {\r\n      console.log(\"Start\");\r\n      sysStatus.set(\"RUNNING\");\r\n      stopStatus.animationStatus = true;\r\n      SearchFinalAnimation(\r\n        search,\r\n        path,\r\n        pathDirection,\r\n        speed,\r\n        SearchAnimation,\r\n        () => sysStatus.set(\"STOP\"),\r\n        () => {\r\n          update.set(\"True\");\r\n          synchronize.update = true;\r\n          sysStatus.set(\"IDLE\");\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const ClearPath = (event = true, reset = false) => {\r\n    if (event) {\r\n      update.set(\"False\");\r\n      synchronize.update = false; //  Because the reducer will be out of sync, it needs to be processed in time\r\n    }\r\n\r\n    for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\r\n      if (WhichComponentSame(i) >= 3) {\r\n        setTable(i, componentKind.background);\r\n      } else if (WhichComponentSame(i) === 1) {\r\n        setTable(i, componentKind.end);\r\n      } else if (WhichComponentSame(i) === 0) {\r\n        setTable(i, componentKind.start);\r\n      }\r\n    }\r\n\r\n    if (animation.get === \"Algorithm\" || reset) {\r\n      resetAnimation();\r\n    }\r\n  };\r\n\r\n  const ClearWalls = () => {\r\n    const wall = Object.keys(position.wall);\r\n    for (var i = 0; i < wall.length; i++) {\r\n      setTable(wall[i].split(\",\"), componentKind.background, true);\r\n    }\r\n\r\n    touch.set(\"\");\r\n  };\r\n\r\n  const ClearBoard = () => {\r\n    update.set(\"False\");\r\n    for (var i = 0; i < tableVar.rowSize * tableVar.colSize; i++) {\r\n      setTable(i, componentKind.background, true);\r\n    }\r\n    setTable(\r\n      originPos.origin_start[0] * tableVar.colSize + originPos.origin_start[1],\r\n      componentKind.start,\r\n      true\r\n    );\r\n    setTable(\r\n      originPos.origin_end[0] * tableVar.colSize + originPos.origin_end[1],\r\n      componentKind.end,\r\n      true\r\n    );\r\n    touch.set(\"\");\r\n  };\r\n\r\n  return { Start, ClearPath, ClearWalls, ClearBoard };\r\n}\r\n\r\nexport default ButtonEvent;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\Colored.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\DropdownAlgorithm.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\NavButton.js",["139"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nimport { algorithmContext, sysStatusContext, speedContext, animationStatusContext } from \"../../../core/index\";\r\nimport ButtonEvent from \"../../../table/tablehelper/ButtonEvent\";\r\nimport { stopStatus } from \"../../../table/tablehelper/Animation\";\r\nimport Dijkstra from \"../../../../algorithms/Dijkstra\";\r\nimport DFS from \"../../../../algorithms/DFS\";\r\nimport { BFS } from \"../../../../algorithms/BFS\";\r\n\r\nconst NavButton = () => {\r\n  const [buttonName, setButtonName] = useState(\"Visualize !\");\r\n  const [myVariant, setMyVariant] = useState(\"\");\r\n  const algoContext = useContext(algorithmContext);\r\n  const sysStatus = useContext(sysStatusContext);\r\n  const animationStatus = useContext(animationStatusContext);\r\n  const speed = useContext(speedContext);\r\n  const animation = useContext(animationStatusContext);\r\n  const buttonEvent = ButtonEvent();\r\n\r\n  useEffect(() => {\r\n    setMyVariant(\"buttonEnable\");\r\n  }, []);\r\n\r\n  // Change text in button according to algorithm\r\n  useEffect(() => {\r\n    if (animationStatus.get === \"Algorithm\") {\r\n      var name = \"\";\r\n      switch (algoContext.get) {\r\n        case \"Algorithm_Dijkstra\":\r\n          name = \"Dijkstra's\";\r\n          break;\r\n        case \"Algorithm_Depth_First\":\r\n          name = \"DFS\";\r\n          break;\r\n        case \"Algorithm_Breadth_First\":\r\n          name = \"BFS\";\r\n          break;\r\n        default:\r\n          name = \"\";\r\n          break;\r\n      }\r\n    } else if (animationStatus.get === \"Maze\") {\r\n      name = \"Maze\";\r\n    }\r\n    setButtonName(`Visualize ${name}!`);\r\n  }, [algoContext.get, animationStatus.get]);\r\n\r\n  useEffect(() => {\r\n    if (sysStatus.get === \"RUNNING\") {\r\n      setMyVariant(\"buttonDisable\");\r\n    } else {\r\n      setMyVariant(\"buttonEnable\");\r\n    }\r\n  }, [sysStatus.get]);\r\n\r\n  // use to call clearpath when change algorithment\r\n  const callback = (func1, func2) => {\r\n    func1();\r\n    func2();\r\n  };\r\n\r\n  const handler = () => {\r\n    //Change system state\r\n    if (sysStatus.get === \"RUNNING\") {\r\n      buttonEvent.Start(); // Pause status changes within this function\r\n      return;\r\n    } else if (sysStatus.get === \"STOP\") {\r\n      if (algoContext.get === stopStatus.algorithm) {\r\n        buttonEvent.Start();\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (algoContext.get === \"\") {\r\n      setButtonName(\"Pick an Algorithm\");\r\n    } else {\r\n      callback(\r\n        () => buttonEvent.ClearPath(),\r\n        () => {\r\n          switch (algoContext.get) {\r\n            case \"Algorithm_Dijkstra\":\r\n              Dijkstra(\"Dijkstra\", buttonEvent.Start, speed.get[1]);\r\n              break;\r\n            case \"Algorithm_Depth_First\":\r\n              DFS(buttonEvent.Start, speed.get[1]);\r\n              break;\r\n            case \"Algorithm_Breadth_First\":\r\n              console.log(\"Staring Bfs\");\r\n              BFS(buttonEvent.Start, speed.get[1]);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Nav.Item>\r\n      <button className={myVariant} onClick={handler}>\r\n        {buttonName}\r\n      </button>\r\n    </Nav.Item>\r\n  );\r\n};\r\n\r\nexport default NavButton;\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\DropdownSpeed.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\Info.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\header\\headerhelper\\elements\\NavLink.js",["140"],"import React, { useState, useContext } from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { sysStatusContext } from \"../../../core\";\r\nimport Colored from \"../Colored\";\r\n\r\nfunction NavLink(props) {\r\n  const sysStatus = useContext(sysStatusContext);\r\n  const [className, toggleHandler] = Colored();\r\n\r\n  const onClick = () => {\r\n    if (sysStatus.get !== \"IDLE\" && sysStatus.get !== \"STOP\") {\r\n      return;\r\n    }\r\n    props.handlers();\r\n  };\r\n\r\n  return (\r\n    <Nav.Item>\r\n      <Nav.Link\r\n        onClick={onClick}\r\n        className={className}\r\n        onMouseEnter={toggleHandler}\r\n        onMouseLeave={toggleHandler}\r\n      >\r\n       {props.names}\r\n      </Nav.Link>\r\n    </Nav.Item>\r\n  );\r\n}\r\n\r\nexport default NavLink\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\SetTable.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\UpdateTable.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\WhichComp.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\table\\tablehelper\\Animation.js",["141"],"import { componentKind } from \"./TableIndex\";\r\nimport { setTable } from \"./SetTable\";\r\nimport { WhichComponentSame, StartEnd } from \"./WhichComp\";\r\nimport { position } from \"../../core/index\";\r\n\r\nexport const stopStatus = {\r\n  // Store the state to resume\r\n  searchStop: [0, 0],\r\n  search: [0, 0],\r\n  path: 0,\r\n  pathID: [-1, -1],\r\n\r\n  searchResult: [],\r\n  pathResult: [],\r\n  pathDirectionResult: [],\r\n\r\n  algorithm: \"\",\r\n\r\n  maze: 0,\r\n  mazeResult: [],\r\n\r\n  animationStatus: false,\r\n  complete: true,\r\n};\r\n\r\nexport function setAnimation(search, path, pathDirection, algorithm) {\r\n  stopStatus.searchResult = search;\r\n  stopStatus.pathResult = path;\r\n  stopStatus.pathDirectionResult = pathDirection;\r\n  stopStatus.algorithm = algorithm;\r\n}\r\n\r\nexport function resetAnimation() {\r\n  stopStatus.search = [0, 0];\r\n  stopStatus.searchStop = [0, 0];\r\n  stopStatus.path = 0;\r\n  stopStatus.pathID = [-1, -1];\r\n\r\n  stopStatus.animationStatus = false;\r\n  stopStatus.complete = true;\r\n}\r\n\r\n/* Search */\r\n\r\nexport function SearchFinalAnimation(\r\n  search,\r\n  path,\r\n  pathDirection,\r\n  speed,\r\n  SearchAnimation,\r\n  sysStatusFunction,\r\n  updateFunction\r\n) {\r\n  // stopStatus.complete = false;\r\n  var count = stopStatus.searchStop[0];\r\n  const searchFinalAnimation = setInterval(() => {\r\n    if (count === search.length) {\r\n      stopStatus.searchStop = [search.length, 0];\r\n      // finish search, call animation\r\n      SearchAnimation(\r\n        path,\r\n        pathDirection,\r\n        speed,\r\n        PathAnimation,\r\n        sysStatusFunction,\r\n        updateFunction\r\n      );\r\n      clearInterval(searchFinalAnimation);\r\n    } else {\r\n      for (\r\n        var i = (count === stopStatus.searchStop[0]) * stopStatus.searchStop[1];\r\n        i < search[count].length;\r\n        i++\r\n      ) {\r\n        if (stopStatus.animationStatus === false) {\r\n          stopStatus.searchStop = [count, i];\r\n          sysStatusFunction();\r\n          clearInterval(searchFinalAnimation);\r\n          return;\r\n        } else {\r\n          if (WhichComponentSame(search[count][i]) > 1) {\r\n            // set search path\r\n            setTable(search[count][i], componentKind.search);\r\n          } else {\r\n            // set start and end\r\n            setTable(\r\n              search[count][i],\r\n              StartEnd(\r\n                WhichComponentSame(search[count][i]),\r\n                componentKind.startSearch,\r\n                componentKind.endSearch\r\n              )\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    count += 1;\r\n  }, speed);\r\n}\r\n\r\nexport function SearchAnimation(\r\n  path,\r\n  pathDirection,\r\n  speed,\r\n  PathAnimation,\r\n  sysStatusFunction,\r\n  updateFunction\r\n) {\r\n  const searchAnimation = setInterval(() => {\r\n    // set shortest path css\r\n    PathAnimation(\r\n      path,\r\n      speed,\r\n      pathDirection,\r\n      sysStatusFunction,\r\n      updateFunction\r\n    );\r\n    clearInterval(searchAnimation);\r\n  }, speed);\r\n}\r\n\r\nexport function PathAnimation(\r\n  path,\r\n  speed,\r\n  pathDirection,\r\n  sysStatusFunction,\r\n  updateFunction\r\n) {\r\n  var [id, newid] = [stopStatus.pathID[0], stopStatus.pathID[1]];\r\n  var count = stopStatus.path;\r\n\r\n  const pathAnimation = setInterval(() => {\r\n    if (count === path.length) {\r\n      resetAnimation();\r\n      updateFunction();\r\n      clearInterval(pathAnimation);\r\n    } else {\r\n      if (stopStatus.animationStatus === false) {\r\n        stopStatus.path = count;\r\n        stopStatus.pathID = [id, newid];\r\n        sysStatusFunction();\r\n        clearInterval(pathAnimation);\r\n        return;\r\n      } else {\r\n        if (WhichComponentSame(path[count]) > 1) {\r\n          newid = path[count];\r\n          // set shortest path ( yellow)\r\n          setTable(id, componentKind.path);\r\n          // set rocket path \r\n          setTable(newid, direction(pathDirection[count])); \r\n\r\n          id = newid;\r\n        } else {\r\n          // WhichComponentSame(path[count]) < 1 ( start, end node)\r\n          setTable(id, componentKind.path);\r\n          setTable(\r\n            path[count],\r\n            StartEnd(\r\n              WhichComponentSame(path[count]),\r\n              direction(pathDirection[count]),\r\n              direction(pathDirection[count])\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n    count += 1;\r\n  }, speed);\r\n}\r\n\r\nexport function FinalAnimation(search, path, pathDirection) {\r\n  for (var i = 0; i < search.length; i++) {\r\n    for (var j = 0; j < search[i].length; j++) {\r\n      if (WhichComponentSame(search[i][j]) > 1) {\r\n        setTable(search[i][j], componentKind.searchStatic);\r\n      } else {\r\n        setTable(\r\n          search[i][j],\r\n          StartEnd(\r\n            WhichComponentSame(search[i][j]),\r\n            componentKind.startSearch,\r\n            componentKind.endSearch\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n  for (i = 0; i < path.length; i++) {\r\n    if (WhichComponentSame(path[i]) > 1) {\r\n      // wall\r\n      setTable(path[i], componentKind.pathStatic);\r\n    } else {\r\n      setTable(\r\n        path[i],\r\n        StartEnd(\r\n          WhichComponentSame(path[i]),\r\n          direction(pathDirection[i]),\r\n          direction(pathDirection[i])\r\n        )\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nfunction direction(kind) {\r\n  switch (kind) {\r\n    case \"left\":\r\n      return componentKind.pathHeadLeft;\r\n    case \"right\":\r\n      return componentKind.pathHeadRight;\r\n    case \"up\":\r\n      return componentKind.pathHeadUp;\r\n    case \"down\":\r\n      return componentKind.pathHeadDown;\r\n    default:\r\n      return componentKind.path;\r\n  }\r\n}\r\n","C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\Dijkstra.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\DFS.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\PriorityQueue.js",[],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\algorithms\\BFS.js",["142"],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\Distance.js",["143"],"C:\\Users\\kevin\\code-repository\\personal\\Codecademy\\21. Backend-Development\\Project\\11_pathfinding\\pathfinding\\src\\components\\core\\Queue.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":60,"column":9,"nodeType":"150","messageId":"151","endLine":60,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":9,"column":13,"nodeType":"154","endLine":9,"endColumn":24},{"ruleId":"148","severity":1,"message":"155","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":23},{"ruleId":"156","severity":1,"message":"157","line":14,"column":6,"nodeType":"158","endLine":14,"endColumn":8,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"160","line":16,"column":9,"nodeType":"150","messageId":"151","endLine":16,"endColumn":18},{"ruleId":"148","severity":1,"message":"161","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":19},{"ruleId":"148","severity":1,"message":"162","line":17,"column":21,"nodeType":"150","messageId":"151","endLine":17,"endColumn":34},{"ruleId":"148","severity":1,"message":"163","line":15,"column":3,"nodeType":"150","messageId":"151","endLine":15,"endColumn":18},{"ruleId":"148","severity":1,"message":"164","line":24,"column":31,"nodeType":"150","messageId":"151","endLine":24,"endColumn":40},{"ruleId":"156","severity":1,"message":"165","line":42,"column":6,"nodeType":"158","endLine":42,"endColumn":36,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"167","line":13,"column":3,"nodeType":"150","messageId":"151","endLine":13,"endColumn":16},{"ruleId":"148","severity":1,"message":"168","line":15,"column":3,"nodeType":"150","messageId":"151","endLine":15,"endColumn":21},{"ruleId":"148","severity":1,"message":"169","line":19,"column":3,"nodeType":"150","messageId":"151","endLine":19,"endColumn":19},{"ruleId":"148","severity":1,"message":"164","line":18,"column":9,"nodeType":"150","messageId":"151","endLine":18,"endColumn":18},{"ruleId":"148","severity":1,"message":"170","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"171","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":18},{"ruleId":"148","severity":1,"message":"172","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":12},{"ruleId":"146","severity":1,"message":"173","line":34,"column":9,"nodeType":"174","messageId":"175","endLine":34,"endColumn":29},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'click' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'updateContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sysStatus'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'sysStatus' is assigned a value but never used.","'className' is assigned a value but never used.","'toggleHandler' is assigned a value but never used.","'keyboardSupport' is defined but never used.","'animation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'algorithm' and 'sysStatus'. Either include them or remove the dependency array.",["179"],"'MazeAnimation' is defined but never used.","'FinalMazeAnimation' is defined but never used.","'setMazeAnimation' is defined but never used.","'useState' is defined but never used.","'position' is defined but never used.","'dist' is defined but never used.","The 'in' expression's left operand is negated.","BinaryExpression","negatedLHS","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [sysStatus]",{"range":"184","text":"185"},"Update the dependencies array to be: [algorithm, algorithm.get, sysStatus, sysStatus.get]",{"range":"186","text":"187"},[422,424],"[sysStatus]",[1102,1132],"[algorithm, algorithm.get, sysStatus, sysStatus.get]"]